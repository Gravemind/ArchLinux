#!/bin/bash

set -euo pipefail

usage() {
    echo -n 'usage: '"$0"' [-h|--help] [-nf] [-dxX] [--] [PATH]

Hard cleans PATH working tree (defaults to "."):
- Recurses sub-modules/gits
- git checkout -- PATH
- git clean -xdf -- PATH # untracked and ignored files

'
}

fclean() {
    local clean_fn="$1"
    local clean_args="$2"
    local path="$3"

    #echo
    pushd "$path" > /dev/null
    echo ":::: fclean $path ..."

    #echo ":::: checkout $path ..."
    #git --no-pager diff --name-only -- "."
    if [[ $clean_fn = "-f" ]]; then
        git checkout -- "."
    fi
    git clean $clean_fn $clean_args -- "."

    popd > /dev/null
}

clean_fn="-f"
clean_args=""

options=$(getopt -o "+hnfdxX" -l "help" -n "$0" -- "$@")
[[ $? -eq 0 ]] || exit 1
eval set -- "$options"
while true; do
    case "$1" in
        -h|--help) usage; exit 0; ;;
        -n) clean_fn="-n"; ;;
        -f) clean_fn="-f"; ;;
        -d) clean_args+=" -d"; ;;
        -x) clean_args+=" -x"; ;;
        -X) clean_args+=" -X"; ;;
        --) shift; break; ;;
        *) break; ;;
    esac
    shift
done
clean_args="${clean_args:--xd}" # default

paths=( "${@:-.}" )
for path in "${paths[@]}" ; do
    if [[ ! -d "$path" ]]; then
        echo "$0: error: no such directory: $path" >&2
        exit 2
    fi
done

echo -n "Recursively reset and clean $clean_fn $clean_args ${paths[@]} ? [y/N] "
read -n 1 r
echo
[[ "$r" == "y" ]] || exit 1
echo

for path in "${paths[@]}" ; do
    fclean "$clean_fn" "$clean_args" "$path"
    while read -u3 -d $'\0' -r sub; do
        sub="$(dirname "$sub")"
        fclean "$clean_fn" "$clean_args" "$sub"
    done 3< <(find "$path" -mindepth 2 -name '.git' -print0)
done

echo
echo "All cleaned."
