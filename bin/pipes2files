#!/bin/bash

##
## usage: pipes2files COMMAND...
##
## Look for named pipes in COMMAND... and replace them by regular files in /tmp,
## then execs the new command.
##
## Example:
##   workaround git diff not reading process substitutions:
##     $> pipes2files git diff --no-index <(ls a) <(ls b)
##

set -euo pipefail

tmpdir="$(mktemp -d -t "$(basename $0).XXXXXXXX")"
cleanup() { rm -rf "$tmpdir"; }
trap cleanup EXIT

args=()
for arg in "$@"
do
    if [[ -p "$arg" ]] # is named pipe
    then
        tmpfile="$(mktemp "$tmpdir/XXXXXXXX")"
        \cat "$arg" > "$tmpfile"
        args+=("$tmpfile")
    else
        args+=("$arg")
    fi
done

# Note: don't `exec` or cleanup wont happen
"${args[@]}"
exit $?
