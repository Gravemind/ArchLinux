#!/bin/bash

set -euo pipefail

usage() {
    echo -n 'usage: '"$0"' [-h|--help|--cli|--zenity|--clipmenu|--rofi] [--clipmenu-args ARGS...] [--] [ARGS...]

    Asks before running `mpv ARGS... -- $(xclip -o)`.

-h|--help: print this message
--cli/--zenity/--clipmenu/--rofi: force ask before run with cli/zenity/clipmenu+dmenu/clipmenu+rofi-dmenu.
--clipmenu-args ARGS...: pass ARGS to clipmenu (when --clipmenu|--rofi)

Environment variables:
* CLIPMENU overrides the clipmenu program

Tip to make mpv open a window ASAP for http/https/ytdl streams: add to your mpv config:
```
[protocol.http]
force-window=immediate
[protocol.https]
profile=protocol.http
[protocol.ytdl]
profile=protocol.http
```

'
}

getclipboard() {
    if hash xclip 2> /dev/null ; then
        xclip -o -r
    elif hash xsel -o 2> /dev/null ; then
        xsel -o
    else
        echo "$0: error: cannot find a program to get the clipboard !" >&2
        exit 1
    fi
}

main() {

    CLIPMENU="${CLIPMENU:-clipmenu}"

    local askwith=
    local clipmenu_args=()
    while (( $# )); do
        case "$1" in
            -h|--help)  usage; exit 0; ;;
            --zenity)   askwith="zenity"; shift; ;;
            --cli)      askwith="cli"; shift; ;;
            --clipmenu) askwith="clipmenu"; shift; ;;
            --rofi)     askwith="rofi"; shift; ;;
            --clipmenu-args)
                shift
                while [[ "$#" -gt 0 && "$1" != "--" ]]; do
                    clipmenu_args+=("$1")
                    shift
                done
                ;;
            --) shift; break; ;;
            *) break; ;;
        esac
    done

    local mpvargs=( "$@" )

    local hastty=1
    [[ -t 0 ]] || hastty=

    if [[ -z "$askwith" ]]; then
        if [[ "$hastty" ]]; then
            askwith="cli"
        elif hash "$CLIPMENU" 2>/dev/null; then
            if [[ -z "${CM_LAUNCHER:-}" ]] && hash "rofi"; then
                askwith="rofi"
            else
                askwith="clipmenu"
            fi
        elif hash zenity 2>/dev/null; then
            askwith="zenity"
        else
            echo "$0: error: cannot find a proper \"ask before run\" program" >&2
            exit 1
        fi
    fi

    # Quiet mpv if not in a cli
    [[ "$hastty" ]] || mpvargs=( --really-quiet "${mpvargs[@]}" )

    local title="mpv clipboard"
    local cmd=()

    if [[ "$askwith" = "cli" ]]; then

        local url="$(getclipboard)"
        cmd=( mpv "${mpvargs[@]}" "--" "$url")

        read -p "$title: launch $(printf "%q " "${cmd[@]}")? [y]? " -r -n1 r
        echo
        [[ "$r" == "y" ]] || { exit 1; }

    elif [[ "$askwith" == "zenity" ]]; then

        local url="$(getclipboard)"
        cmd=( mpv "${mpvargs[@]}" "--" "$url")

        # --no-markup or else we need to htlm escape url (eg &->&amp;)
        zenity --question --title "$title" \
               --no-markup --no-wrap \
               --text "$(printf " %q" "${cmd[@]}")" \
               --cancel-label "Abort" \
               --ok-label "Launch"
        [[ $? -eq 0 ]] || { exit 1; }

    elif [[ "$askwith" == "clipmenu" || "$askwith" == "rofi" ]]; then

        local launcher=( dmenu )
        [[ "$askwith" != "rofi" ]] || launcher=( rofi -dmenu )

        [[ "${#clipmenu_args[@]}" -gt 0 ]] || clipmenu_args=( -p "$title" )

        # rofi-script makes clipmenu list-only entries
        # (we won't get multi-line clips, but don't really care here !?)
        local url="$(CM_LAUNCHER=rofi-script "$CLIPMENU" | "${launcher[@]}" "${clipmenu_args[@]}" )"
        [[ $? -eq 0 ]] || { exit 1; }
        [[ -n "$url" ]] || { exit 1; }

        cmd=( mpv "${mpvargs[@]}" "--" "$url")

    else
        exit 48
    fi

    exec "${cmd[@]}"
}

main "$@"
