#!/bin/bash

ARG1=$1

colerror="\e[1;31m"
colok="\e[1;34m"
colreset="\e[0m"
list_only=0
match=

usage() {
	echo "usage:"
	echo "	  $0 [-h|-l|pattern]"
}

while getopts hl opt; do
	case $opt in
		h)
			usage
			exit 0
			;;
		l)
			list_only=1
			;;
		\?)
			usage
			exit 2
			;;
	esac
done

shift $((OPTIND-1))
match=$1

function mymerge() {
	if [[ "$2" != *${match}* ]]
	then
		echo "## ignored: $2"
		return
	fi

	if [ ! -e "$2" ]
	then
		echo -e "$colerror## not such file or dir: $2$colreset"
		return
	fi
	if [ ! -e "$1" ]
	then
		echo -e "$colerror## not such file or dir: $1$colreset"
		return
	fi

	MERGER="meld"
	if [ "$OS" = "Windows_NT" ]
	then
		echo "You are on Windows"
		MERGER="/c/Program Files (x86)/Meld/meld/meld.exe"
	fi

	if [ -n "$(diff -rq -x .git "$1" "$2" 2> /dev/null)" ]
	then
		echo "\$> merging $1 $2"
		if [ $list_only != 1 ]
		then
			"$MERGER" $1 $2 &> /dev/null
			if [ $? != 0 ]
			then
				echo "## meld exited"
				exit 1
			fi
		fi
	else
		echo -e "$colok## ok: $2$colreset"
	fi
}

cp ~/.oh-my-zsh/tools/install.sh oh-my-zsh-install.sh
mymerge ~/bin bin
#mymerge ~/.conky .conky
#mymerge ~/.dzen .dzen

mymerge ~/.emacs.d/init.el .emacs.d/init.el
mymerge ~/.emacs.d/snippets .emacs.d/snippets
mymerge ~/.emacs.d/themes .emacs.d/themes

mymerge ~/.gitconfig .gitconfig
mymerge ~/.gitignore .gitignore
mymerge ~/.i3 .i3
mymerge ~/.ncmpcpp/config .ncmpcpp/config
mymerge ~/.oh-my-zsh/custom .oh-my-zsh/custom
#mymerge ~/oh-my-zsh-install.sh oh-my-zsh-install.sh
#mymerge ~/.screenrc .screenrc
#mymerge ~/scripts scripts
#mymerge ~/.userscripts .userscripts
#mymerge ~/.Xdefaults .Xdefaults
mymerge ~/.Xresources .Xresources
mymerge ~/.xinitrc .xinitrc
mymerge ~/.zshrc .zshrc
mymerge ~/.toprc .toprc
mymerge ~/.config/mpd/mpd.conf .config/mpd/mpd.conf
#mymerge ~/.config/systemd .config/systemd
#mymerge ~/.config/MusicBrainz/Picard.conf .config/MusicBrainz/Picard.conf
mymerge ~/.mpv/config .mpv/config
