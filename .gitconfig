#[user]
#	email =
#	name =

[alias]
	st = status
	ci = commit
	co = checkout
	br = branch
	com = commit -m
	s = status -sb
	ss = status -sb .
	d = diff -M
	dc = diff -M --cached

	su = !git --no-pager diff --name-only --diff-filter=U
	sa = !git --no-pager diff --name-only --diff-filter=A
	sm = !git --no-pager diff --name-only --diff-filter=M
	sd = !git --no-pager diff --name-only --diff-filter=D

	a = add
	## "un-add"
	ua = reset HEAD

	## Usage: git fo BRANCH
	## Fetch BRANCH and update local ref
	fo = "!sh -c 'git fetch origin $1:$1;' -"

	## Usage: git fco BRANCH
	## "git fo BRANCH" then "git checkout BRANCH"
	fco = "!sh -c 'git fo $1; git checkout $1 && git submodule update' -"

	## Fetch prune all
	fp = fetch --all --prune --tags

	## Pull only if fast forward is possible (abort if conflicts)
	pullff = pull --no-rebase --ff-only

	## Clean deleted branches
	cleanbranches = !git branch -vv | grep ': gone]' | awk '{ print $1 }' | xargs -n 1 git branch -d

	## Usage: git magicmerge BRANCH
	## Magic merge
	## -c merge.renamelimit=2048	# increase "follow file rename" limit
	## -X patience					# slower but much smarter merge
	## -X rename-threshold=10		# 2 files with 10% similarities is a rename
	## # -X ignore-space-change		# well, ignore whitespaces
	## -X ignore-space-at-eol		# well, ignore whitespaces eol
	## --no-ff						# dont fast forward, ie always create a commit
	## --no-commit					# dont "auto" commit after merge
	magicmerge = !git -c merge.renamelimit=2048 merge -X patience -X rename-threshold=10 -X ignore-space-at-eol --no-ff --no-commit

	## Pertty log current branch
	l = log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) %C(bold red)%d%C(reset) %C(white)%s%C(reset) %C(green)%an%C(reset) %C(bold blue)%ar%C(reset)' --date-order

	## Pertty log current branch, topologic
	lt = log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) %C(bold red)%d%C(reset) %C(white)%s%C(reset) %C(green)%an%C(reset) %C(bold blue)%ar%C(reset)'

	## Pertty log all
	la = !git l --all

	## Pretty log all merges only
	ll = !git la --simplify-by-decoration

	## Pertty log current and remote branch
	lo = !git l @..@{upstream}

	## Pertty log all not merged in HEAD
	loa = !git l --all --not @

	## git cont REV
	## shows branch containing REV
	cont = branch -a --contains

	## show hide untracked files
	hideuntrack = config --local status.showUntrackedFiles no
	showuntrack = config --local status.showUntrackedFiles normal

[color]
	branch = auto
	diff = auto
	interactive = auto
	status = auto
	log = auto
	ui = auto
[color "branch"]
	current = bold green
	local = bold yellow
	remote = bold cyan
[color "status"]
	header = bold white
	added = bold green
	changed = bold blue
	untracked = red
	unmerged = bold red
	branch = yellow

#[column]
#	ui = auto column dense

[fetch]
	prune = true
[pull]
	rebase = true
[push]
	default = simple
[merge]
	conflictstyle = diff3
[core]
	## Increase short hash to 10 characters
	abbrev = 10

[core]
	# default:
	# whitespace = blank-at-eol,blank-at-eof,space-before-tab
	whitespace = blank-at-eol,blank-at-eof,space-before-tab,cr-at-eol

	# checkout crlf, commit lf
	# autocrlf = true
	# checkout as is, commit lf
	autocrlf = input
	# checkout as is, commit as is
	# autocrlf = false

[merge]
	tool = meld

[mergetool "emerge"]
	path = /home/jo/bin/emerge-for-git

###	WINDOWS
#[core]
#	autocrlf = true
#	editor = \"C:/Program Files (x86)/emacs-24.3/bin/emacs.exe\"
#	eol = crlf
#[difftool "meld"]
#	cmd = '/c/Program Files (x86)/Meld/meld/meld.exe' \"$LOCAL\" \"$REMOTE\"
