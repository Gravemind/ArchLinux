#!/usr/bin/env python3

# AUR i3ipc-python
# https://i3ipc-python.readthedocs.io/en/latest/
# https://github.com/acrisci/i3ipc-python/blob/master/i3ipc/i3ipc.py
import i3ipc

# libnotify
# https://wiki.archlinux.org/index.php/Desktop_notifications#See_also
# https://www.devdungeon.com/content/desktop-notifications-linux-python
# https://developer.gnome.org/libnotify/0.7/NotifyNotification.html
import gi

gi.require_version('Notify', '0.7')
from gi.repository import Notify

import sys
import subprocess

import pprint
pp = pprint.PrettyPrinter(indent=4).pprint

def logerr(msg):
    print(msg, file=sys.stderr)

URGENCY_CRITICAL = 2
URGENCY_NORMAL = 1
URGENCY_LOW = 0

def on_action_click():
    print("CLICK "+str(winid))

global pending_notifications
pending_notifications = {}

# https://wiki.ubuntu.com/NotificationDevelopmentGuidelines
def escape_markup(text):
    #if caps and 'body-markup' in caps:
    text = text.replace('&', '&amp;')
    text = text.replace('<', '&lt;')
    text = text.replace('>', '&gt;')
    return text

def on_urgent(i3, e):
    pp(e.container.__dict__)

    global pending_notifications
    key = e.container.id
    if key in pending_notifications:
        notif = pending_notifications[key]
    else:
        notif = Notify.Notification.new("urgent")
        pending_notifications[key] = notif

    if e.container.urgent:

        notif.set_urgency(URGENCY_CRITICAL)
        notif.update("urgent", escape_markup("{}: {}".format(e.container.window_class, e.container.name)))

        notif.clear_actions()
        notif.add_action("action_click", "focus", on_action_click)

        notif.show()

    else:
        notif.close()
        del pending_notifications[key]

def main(rawargs):

    Notify.init("urgent-watcher")

    i3 = i3ipc.Connection()
    i3.on('window::urgent', on_urgent)

    i3.main()

    return 0

if __name__ == "__main__":
    ret = main(sys.argv[1:])
    sys.exit(ret)
